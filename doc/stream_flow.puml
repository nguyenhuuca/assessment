@startuml
actor Client
participant "VideoController" as Controller
participant "VideoService" as Service
participant "VideoCacheService" as Cache
participant "ChunkLockManager" as LockManager
participant "DiskStorage"
participant "GoogleDriveService" as GoogleDrive

Client -> Controller : GET /stream/{fileId}\nRange: bytes=start-end
note right of Client : <video> tag sends Range header

Controller -> Controller : Parse Range
Controller -> Service : getPartialFileByChunk(fileId, start, end)

Service -> Cache : hasChunk(fileId, start, end)
alt Chunk exists
    Service -> Cache : getChunk(...)
else
    Service -> GoogleDrive : fetchFromGoogleDrive(...)
    Service -> Cache : saveChunk(...)

    Cache -> LockManager : tryLock(fileId, start, end)
    alt Lock acquired
        Cache -> DiskStorage : write chunk
        Cache -> LockManager : release(...)
    else Lock busy
        Cache -> Cache : throw IOException
    end

    alt saveChunk failed
        Service -> GoogleDrive : fetchFromGoogleDrive(...)  // fallback
    end

    Service -> Cache : getChunk(...)  // get again after save
end

Cache --> Service : InputStream
Service --> Controller : InputStream
Controller -> Client : HTTP 206 Partial Content
note right of Controller : StreamingResponseBody

@enduml
