@startuml
skinparam monochrome false
skinparam shadowing true
skinparam roundcorner 20
skinparam style strictuml

' Define colors for participants
skinparam Participant {
    BackgroundColor<<Controller>> #B0C4DE
    BackgroundColor<<Service>> #C0F0C0
    BackgroundColor<<Cache>> #FFFACD
    BackgroundColor<<Lock>> #FFDAB9
    BackgroundColor<<Storage>> #E6E6FA
    BackgroundColor<<External>> #FFDEAD
}

actor Client
participant "VideoController" as Controller <<Controller>>
participant "VideoService" as Service <<Service>>
participant "VideoCacheService" as Cache <<Cache>>
participant "ChunkLockManager" as LockManager <<Lock>>
participant "DiskStorage" <<Storage>>
participant "GoogleDriveService" as GoogleDrive <<External>>

Client -> Controller : GET /stream/{fileId}\nRange: bytes=start-end
note right of Client : <video> tag sends Range header

Controller -> Controller : Parse Range
Controller -> Service : getPartialFileByChunk(fileId, start, end)

Service -> Cache : hasChunk(fileId, start, end)
alt ✅ Chunk exists (Cache Hit)
    Service -> Cache : getChunk(...)
else ❌ Chunk missing (Cache Miss)
    Service -> GoogleDrive : fetchFromGoogleDrive(...)
    Service -> Cache : saveChunk(...)

    Cache -> LockManager : tryLock(fileId, start, end)
    alt ✅ Lock acquired
        Cache -> DiskStorage : write chunk
        Cache -> LockManager : release(...)
    else ❌ Lock busy
        Cache -> Cache : throw IOException
    end

    alt ⚠️ saveChunk failed
        Service -> GoogleDrive : fetchFromGoogleDrive(...)  // fallback
    end

    Service -> Cache : getChunk(...)  // get again after save
end

Cache --> Service : InputStream
Service --> Controller : InputStream
Controller -> Client : HTTP 206 Partial Content
note right of Controller : StreamingResponseBody

@enduml
